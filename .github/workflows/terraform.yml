name: Pipeline

on:
  push:
    branches: ["main"]

  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Run unit tests
       run: composer install && ./vendor/bin/phpunit --testdox tests --colors
       
  update-image-aws-ecr:
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        run: |
          sudo apt install -y awscli
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default_region_name ${{ secrets.AWS_DEFAULT_REGION_NAME }}
          aws configure set default_output_format JSON

      - name: Install docker desktop
        run: |
          sudo apt install -y ca-certificates curl gnupg lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update -y
          curl -O https://desktop.docker.com/linux/main/amd64/docker-desktop-4.25.0-amd64.deb
          sudo apt-get -y install ./docker-desktop-4.25.0-amd64.deb

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Update kubeconfig
        run: aws eks --region ${{ secrets.AWS_DEFAULT_REGION_NAME }} update-kubeconfig --name postech

      - name: Deploy updated source code to AWS ECR
        run: |
          docker build -t diogomuniz/hackathon-aplicacao-servico-registro-de-ponto .
          docker login -u AWS -p $(aws ecr get-login-password --region us-east-1) 751916211357.dkr.ecr.us-east-1.amazonaws.com/hackathon-registro-de-ponto
          docker tag diogomuniz/hackathon-aplicacao-servico-registro-de-ponto:latest 751916211357.dkr.ecr.us-east-1.amazonaws.com/hackathon-registro-de-ponto
          docker push 751916211357.dkr.ecr.us-east-1.amazonaws.com/hackathon-registro-de-ponto

  deploy-application:
    needs: update-image-aws-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Deploy updated source code to production application from ECR image
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT }}
          repository: munizdiogo/postech-hackathon-infra-kubernetes-terraform
          event-type: pipeline-registro-de-ponto
